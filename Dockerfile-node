# syntax=docker/dockerfile:1

# - Before building the Docker, ensure that you setup the initial configs of the node.
# - You have to setup email credentials as well as the account from the master node, or just the credentials.
# - Ensure that the nodes were able to initialize as well as shutdown gracefully in the sense that the files were able to encrypt-decrpyt such files.

FROM python:3.10.2-slim-buster

ARG NODE_ROLE

# @o Be mindful of this one, since the system knows when the specified port is already in use, it does not however terminates the system. Which causes a mismatch port to port forward.
ARG NODE_PORT=5001

# ! Ensure that the `NODE_HOST` is the same as the docker's host instance IP address.
ARG NODE_HOST=172.17.0.2

ENV PORT=${NODE_PORT}
ENV ROLE=${NODE_ROLE}
ENV HOST=${NODE_HOST}

EXPOSE $PORT

ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# # Fetch poetry and put on a different folder.
RUN apt-get update; apt-get install -y curl && curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python - \
	&& ln -s "$HOME/.poetry/bin/poetry" /usr/local/bin/poetry \
	&& mkdir -p /usr/local/build

# # Copy the dependencies for the poetry to install.
WORKDIR /usr/local/build
COPY poetry.lock pyproject.toml ./
RUN poetry export -f requirements.txt -o requirements.txt --without-hashes

# # Copy our backend server from their respective folder.
WORKDIR /usr/local/folioblocks-node/
COPY node/ ./
COPY /backup ./backup

# # Decide what node configuration to copy over Docker.
RUN if [ "${NODE_ROLE}" = "MASTER_NODE" ]; then cp backup/master/with_chain/** ./ ;\
	else cp backup/archival/with_chain/** ./ ; fi

RUN pip3 install --no-cache-dir -r /usr/local/build/requirements.txt \
	&& rm -rf /usr/local/build ~/.cache/pip

# # Set the python file to an executable.
RUN chmod +x main.py

# # Run the file.
ENTRYPOINT python3 main.py --host $HOST --log-level INFO --prefer-role $ROLE --port $PORT

# TODO: Not sure if this is working when the stop button is stopped.
STOPSIGNAL SIGINT